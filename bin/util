#!/bin/bash

error_return() {
  echo
  echo " !     ERROR: $*" | indent no_first_line_indent
  echo
  return 1
}

status_pending() {
  echo -n "-----> $*..."
}

status_done() {
  echo " done"
}

# sed -l basically makes sed replace and buffer through stdin to
# stdout so you get updates while the command runs and dont wait for
# the end e.g. npm install | indent
indent() {
  # if an arg is given it's a flag indicating we shouldn't indent the
  # first line, so use :+ to tell SED accordingly if that parameter
  # is set, otherwise null string for no range selector prefix (it
  # selects from line 2 onwards and then every 1st line, meaning all
  # lines)
  c="${1:+"2,999"} s/^/       /"
  case $(uname) in
    Darwin) sed -l "$c";; # mac/bsd
    *)      sed -u "$c";; # unix/gnu
  esac
}

export_env_dir() {
  env_dir="${1}"
  whitelist_regex="${2:-''}"
  blacklist_regex="${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS|JAVA_TOOL_OPTIONS)$'}"
  if [ -d "${env_dir}" ]; then
    for e in $(ls "${env_dir}"); do
      echo "${e}" | \
        grep -E "${whitelist_regex}" | \
        grep -qvE "${blacklist_regex}" && \
        export "${e}=$(cat $env_dir/$e)"
      :
    done
  fi
}
